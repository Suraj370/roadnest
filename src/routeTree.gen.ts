/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as DashboardImport } from './routes/dashboard'
import { Route as SignupImport } from './routes/Signup'
import { Route as LoginImport } from './routes/Login'
import { Route as IndexImport } from './routes/index'
import { Route as SearchIndexImport } from './routes/search/index'
import { Route as DashboardRentalsImport } from './routes/dashboard/rentals'
import { Route as DashboardPaymentsImport } from './routes/dashboard/payments'
import { Route as DashboardCalendarImport } from './routes/dashboard/calendar'
import { Route as DashboardAccountImport } from './routes/dashboard/account'
import { Route as DashboardPaymentMethodsIndexImport } from './routes/dashboard/payment-methods/index'
import { Route as DashboardAccountVerifyProfileIndexImport } from './routes/dashboard/account/verify-profile/index'
import { Route as DashboardAccountSettingsIndexImport } from './routes/dashboard/account/settings/index'
import { Route as DashboardAccountPaymentMethodsIndexImport } from './routes/dashboard/account/payment-methods/index'
import { Route as DashboardAccountNotificationsIndexImport } from './routes/dashboard/account/notifications/index'
import { Route as DashboardAccountGetCreditIndexImport } from './routes/dashboard/account/get-credit/index'
import { Route as DashboardAccountEditProfileIndexImport } from './routes/dashboard/account/edit-profile/index'

// Create/Update Routes

const DashboardRoute = DashboardImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRoute,
} as any)

const SignupRoute = SignupImport.update({
  id: '/Signup',
  path: '/Signup',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  id: '/Login',
  path: '/Login',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const SearchIndexRoute = SearchIndexImport.update({
  id: '/search/',
  path: '/search/',
  getParentRoute: () => rootRoute,
} as any)

const DashboardRentalsRoute = DashboardRentalsImport.update({
  id: '/rentals',
  path: '/rentals',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardPaymentsRoute = DashboardPaymentsImport.update({
  id: '/payments',
  path: '/payments',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardCalendarRoute = DashboardCalendarImport.update({
  id: '/calendar',
  path: '/calendar',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardAccountRoute = DashboardAccountImport.update({
  id: '/account',
  path: '/account',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardPaymentMethodsIndexRoute =
  DashboardPaymentMethodsIndexImport.update({
    id: '/payment-methods/',
    path: '/payment-methods/',
    getParentRoute: () => DashboardRoute,
  } as any)

const DashboardAccountVerifyProfileIndexRoute =
  DashboardAccountVerifyProfileIndexImport.update({
    id: '/verify-profile/',
    path: '/verify-profile/',
    getParentRoute: () => DashboardAccountRoute,
  } as any)

const DashboardAccountSettingsIndexRoute =
  DashboardAccountSettingsIndexImport.update({
    id: '/settings/',
    path: '/settings/',
    getParentRoute: () => DashboardAccountRoute,
  } as any)

const DashboardAccountPaymentMethodsIndexRoute =
  DashboardAccountPaymentMethodsIndexImport.update({
    id: '/payment-methods/',
    path: '/payment-methods/',
    getParentRoute: () => DashboardAccountRoute,
  } as any)

const DashboardAccountNotificationsIndexRoute =
  DashboardAccountNotificationsIndexImport.update({
    id: '/notifications/',
    path: '/notifications/',
    getParentRoute: () => DashboardAccountRoute,
  } as any)

const DashboardAccountGetCreditIndexRoute =
  DashboardAccountGetCreditIndexImport.update({
    id: '/get-credit/',
    path: '/get-credit/',
    getParentRoute: () => DashboardAccountRoute,
  } as any)

const DashboardAccountEditProfileIndexRoute =
  DashboardAccountEditProfileIndexImport.update({
    id: '/edit-profile/',
    path: '/edit-profile/',
    getParentRoute: () => DashboardAccountRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/Login': {
      id: '/Login'
      path: '/Login'
      fullPath: '/Login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/Signup': {
      id: '/Signup'
      path: '/Signup'
      fullPath: '/Signup'
      preLoaderRoute: typeof SignupImport
      parentRoute: typeof rootRoute
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/account': {
      id: '/dashboard/account'
      path: '/account'
      fullPath: '/dashboard/account'
      preLoaderRoute: typeof DashboardAccountImport
      parentRoute: typeof DashboardImport
    }
    '/dashboard/calendar': {
      id: '/dashboard/calendar'
      path: '/calendar'
      fullPath: '/dashboard/calendar'
      preLoaderRoute: typeof DashboardCalendarImport
      parentRoute: typeof DashboardImport
    }
    '/dashboard/payments': {
      id: '/dashboard/payments'
      path: '/payments'
      fullPath: '/dashboard/payments'
      preLoaderRoute: typeof DashboardPaymentsImport
      parentRoute: typeof DashboardImport
    }
    '/dashboard/rentals': {
      id: '/dashboard/rentals'
      path: '/rentals'
      fullPath: '/dashboard/rentals'
      preLoaderRoute: typeof DashboardRentalsImport
      parentRoute: typeof DashboardImport
    }
    '/search/': {
      id: '/search/'
      path: '/search'
      fullPath: '/search'
      preLoaderRoute: typeof SearchIndexImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/payment-methods/': {
      id: '/dashboard/payment-methods/'
      path: '/payment-methods'
      fullPath: '/dashboard/payment-methods'
      preLoaderRoute: typeof DashboardPaymentMethodsIndexImport
      parentRoute: typeof DashboardImport
    }
    '/dashboard/account/edit-profile/': {
      id: '/dashboard/account/edit-profile/'
      path: '/edit-profile'
      fullPath: '/dashboard/account/edit-profile'
      preLoaderRoute: typeof DashboardAccountEditProfileIndexImport
      parentRoute: typeof DashboardAccountImport
    }
    '/dashboard/account/get-credit/': {
      id: '/dashboard/account/get-credit/'
      path: '/get-credit'
      fullPath: '/dashboard/account/get-credit'
      preLoaderRoute: typeof DashboardAccountGetCreditIndexImport
      parentRoute: typeof DashboardAccountImport
    }
    '/dashboard/account/notifications/': {
      id: '/dashboard/account/notifications/'
      path: '/notifications'
      fullPath: '/dashboard/account/notifications'
      preLoaderRoute: typeof DashboardAccountNotificationsIndexImport
      parentRoute: typeof DashboardAccountImport
    }
    '/dashboard/account/payment-methods/': {
      id: '/dashboard/account/payment-methods/'
      path: '/payment-methods'
      fullPath: '/dashboard/account/payment-methods'
      preLoaderRoute: typeof DashboardAccountPaymentMethodsIndexImport
      parentRoute: typeof DashboardAccountImport
    }
    '/dashboard/account/settings/': {
      id: '/dashboard/account/settings/'
      path: '/settings'
      fullPath: '/dashboard/account/settings'
      preLoaderRoute: typeof DashboardAccountSettingsIndexImport
      parentRoute: typeof DashboardAccountImport
    }
    '/dashboard/account/verify-profile/': {
      id: '/dashboard/account/verify-profile/'
      path: '/verify-profile'
      fullPath: '/dashboard/account/verify-profile'
      preLoaderRoute: typeof DashboardAccountVerifyProfileIndexImport
      parentRoute: typeof DashboardAccountImport
    }
  }
}

// Create and export the route tree

interface DashboardAccountRouteChildren {
  DashboardAccountEditProfileIndexRoute: typeof DashboardAccountEditProfileIndexRoute
  DashboardAccountGetCreditIndexRoute: typeof DashboardAccountGetCreditIndexRoute
  DashboardAccountNotificationsIndexRoute: typeof DashboardAccountNotificationsIndexRoute
  DashboardAccountPaymentMethodsIndexRoute: typeof DashboardAccountPaymentMethodsIndexRoute
  DashboardAccountSettingsIndexRoute: typeof DashboardAccountSettingsIndexRoute
  DashboardAccountVerifyProfileIndexRoute: typeof DashboardAccountVerifyProfileIndexRoute
}

const DashboardAccountRouteChildren: DashboardAccountRouteChildren = {
  DashboardAccountEditProfileIndexRoute: DashboardAccountEditProfileIndexRoute,
  DashboardAccountGetCreditIndexRoute: DashboardAccountGetCreditIndexRoute,
  DashboardAccountNotificationsIndexRoute:
    DashboardAccountNotificationsIndexRoute,
  DashboardAccountPaymentMethodsIndexRoute:
    DashboardAccountPaymentMethodsIndexRoute,
  DashboardAccountSettingsIndexRoute: DashboardAccountSettingsIndexRoute,
  DashboardAccountVerifyProfileIndexRoute:
    DashboardAccountVerifyProfileIndexRoute,
}

const DashboardAccountRouteWithChildren =
  DashboardAccountRoute._addFileChildren(DashboardAccountRouteChildren)

interface DashboardRouteChildren {
  DashboardAccountRoute: typeof DashboardAccountRouteWithChildren
  DashboardCalendarRoute: typeof DashboardCalendarRoute
  DashboardPaymentsRoute: typeof DashboardPaymentsRoute
  DashboardRentalsRoute: typeof DashboardRentalsRoute
  DashboardPaymentMethodsIndexRoute: typeof DashboardPaymentMethodsIndexRoute
}

const DashboardRouteChildren: DashboardRouteChildren = {
  DashboardAccountRoute: DashboardAccountRouteWithChildren,
  DashboardCalendarRoute: DashboardCalendarRoute,
  DashboardPaymentsRoute: DashboardPaymentsRoute,
  DashboardRentalsRoute: DashboardRentalsRoute,
  DashboardPaymentMethodsIndexRoute: DashboardPaymentMethodsIndexRoute,
}

const DashboardRouteWithChildren = DashboardRoute._addFileChildren(
  DashboardRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/Login': typeof LoginRoute
  '/Signup': typeof SignupRoute
  '/dashboard': typeof DashboardRouteWithChildren
  '/dashboard/account': typeof DashboardAccountRouteWithChildren
  '/dashboard/calendar': typeof DashboardCalendarRoute
  '/dashboard/payments': typeof DashboardPaymentsRoute
  '/dashboard/rentals': typeof DashboardRentalsRoute
  '/search': typeof SearchIndexRoute
  '/dashboard/payment-methods': typeof DashboardPaymentMethodsIndexRoute
  '/dashboard/account/edit-profile': typeof DashboardAccountEditProfileIndexRoute
  '/dashboard/account/get-credit': typeof DashboardAccountGetCreditIndexRoute
  '/dashboard/account/notifications': typeof DashboardAccountNotificationsIndexRoute
  '/dashboard/account/payment-methods': typeof DashboardAccountPaymentMethodsIndexRoute
  '/dashboard/account/settings': typeof DashboardAccountSettingsIndexRoute
  '/dashboard/account/verify-profile': typeof DashboardAccountVerifyProfileIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/Login': typeof LoginRoute
  '/Signup': typeof SignupRoute
  '/dashboard': typeof DashboardRouteWithChildren
  '/dashboard/account': typeof DashboardAccountRouteWithChildren
  '/dashboard/calendar': typeof DashboardCalendarRoute
  '/dashboard/payments': typeof DashboardPaymentsRoute
  '/dashboard/rentals': typeof DashboardRentalsRoute
  '/search': typeof SearchIndexRoute
  '/dashboard/payment-methods': typeof DashboardPaymentMethodsIndexRoute
  '/dashboard/account/edit-profile': typeof DashboardAccountEditProfileIndexRoute
  '/dashboard/account/get-credit': typeof DashboardAccountGetCreditIndexRoute
  '/dashboard/account/notifications': typeof DashboardAccountNotificationsIndexRoute
  '/dashboard/account/payment-methods': typeof DashboardAccountPaymentMethodsIndexRoute
  '/dashboard/account/settings': typeof DashboardAccountSettingsIndexRoute
  '/dashboard/account/verify-profile': typeof DashboardAccountVerifyProfileIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/Login': typeof LoginRoute
  '/Signup': typeof SignupRoute
  '/dashboard': typeof DashboardRouteWithChildren
  '/dashboard/account': typeof DashboardAccountRouteWithChildren
  '/dashboard/calendar': typeof DashboardCalendarRoute
  '/dashboard/payments': typeof DashboardPaymentsRoute
  '/dashboard/rentals': typeof DashboardRentalsRoute
  '/search/': typeof SearchIndexRoute
  '/dashboard/payment-methods/': typeof DashboardPaymentMethodsIndexRoute
  '/dashboard/account/edit-profile/': typeof DashboardAccountEditProfileIndexRoute
  '/dashboard/account/get-credit/': typeof DashboardAccountGetCreditIndexRoute
  '/dashboard/account/notifications/': typeof DashboardAccountNotificationsIndexRoute
  '/dashboard/account/payment-methods/': typeof DashboardAccountPaymentMethodsIndexRoute
  '/dashboard/account/settings/': typeof DashboardAccountSettingsIndexRoute
  '/dashboard/account/verify-profile/': typeof DashboardAccountVerifyProfileIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/Login'
    | '/Signup'
    | '/dashboard'
    | '/dashboard/account'
    | '/dashboard/calendar'
    | '/dashboard/payments'
    | '/dashboard/rentals'
    | '/search'
    | '/dashboard/payment-methods'
    | '/dashboard/account/edit-profile'
    | '/dashboard/account/get-credit'
    | '/dashboard/account/notifications'
    | '/dashboard/account/payment-methods'
    | '/dashboard/account/settings'
    | '/dashboard/account/verify-profile'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/Login'
    | '/Signup'
    | '/dashboard'
    | '/dashboard/account'
    | '/dashboard/calendar'
    | '/dashboard/payments'
    | '/dashboard/rentals'
    | '/search'
    | '/dashboard/payment-methods'
    | '/dashboard/account/edit-profile'
    | '/dashboard/account/get-credit'
    | '/dashboard/account/notifications'
    | '/dashboard/account/payment-methods'
    | '/dashboard/account/settings'
    | '/dashboard/account/verify-profile'
  id:
    | '__root__'
    | '/'
    | '/Login'
    | '/Signup'
    | '/dashboard'
    | '/dashboard/account'
    | '/dashboard/calendar'
    | '/dashboard/payments'
    | '/dashboard/rentals'
    | '/search/'
    | '/dashboard/payment-methods/'
    | '/dashboard/account/edit-profile/'
    | '/dashboard/account/get-credit/'
    | '/dashboard/account/notifications/'
    | '/dashboard/account/payment-methods/'
    | '/dashboard/account/settings/'
    | '/dashboard/account/verify-profile/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  LoginRoute: typeof LoginRoute
  SignupRoute: typeof SignupRoute
  DashboardRoute: typeof DashboardRouteWithChildren
  SearchIndexRoute: typeof SearchIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  LoginRoute: LoginRoute,
  SignupRoute: SignupRoute,
  DashboardRoute: DashboardRouteWithChildren,
  SearchIndexRoute: SearchIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/Login",
        "/Signup",
        "/dashboard",
        "/search/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/Login": {
      "filePath": "Login.tsx"
    },
    "/Signup": {
      "filePath": "Signup.tsx"
    },
    "/dashboard": {
      "filePath": "dashboard.tsx",
      "children": [
        "/dashboard/account",
        "/dashboard/calendar",
        "/dashboard/payments",
        "/dashboard/rentals",
        "/dashboard/payment-methods/"
      ]
    },
    "/dashboard/account": {
      "filePath": "dashboard/account.tsx",
      "parent": "/dashboard",
      "children": [
        "/dashboard/account/edit-profile/",
        "/dashboard/account/get-credit/",
        "/dashboard/account/notifications/",
        "/dashboard/account/payment-methods/",
        "/dashboard/account/settings/",
        "/dashboard/account/verify-profile/"
      ]
    },
    "/dashboard/calendar": {
      "filePath": "dashboard/calendar.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/payments": {
      "filePath": "dashboard/payments.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/rentals": {
      "filePath": "dashboard/rentals.tsx",
      "parent": "/dashboard"
    },
    "/search/": {
      "filePath": "search/index.tsx"
    },
    "/dashboard/payment-methods/": {
      "filePath": "dashboard/payment-methods/index.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/account/edit-profile/": {
      "filePath": "dashboard/account/edit-profile/index.tsx",
      "parent": "/dashboard/account"
    },
    "/dashboard/account/get-credit/": {
      "filePath": "dashboard/account/get-credit/index.tsx",
      "parent": "/dashboard/account"
    },
    "/dashboard/account/notifications/": {
      "filePath": "dashboard/account/notifications/index.tsx",
      "parent": "/dashboard/account"
    },
    "/dashboard/account/payment-methods/": {
      "filePath": "dashboard/account/payment-methods/index.tsx",
      "parent": "/dashboard/account"
    },
    "/dashboard/account/settings/": {
      "filePath": "dashboard/account/settings/index.tsx",
      "parent": "/dashboard/account"
    },
    "/dashboard/account/verify-profile/": {
      "filePath": "dashboard/account/verify-profile/index.tsx",
      "parent": "/dashboard/account"
    }
  }
}
ROUTE_MANIFEST_END */
